AWK 命令总结学习笔记
什么是 AWK？
AWK 是一种强大的文本处理工具，其名称来自于其三位创始人 Alfred Aho、Peter Weinberger 和 Brian Kernighan 的姓氏首字母。它在 UNIX 和类 UNIX 系统中广泛使用，用于对文本文件进行逐行处理、提取数据、格式化输出等操作。AWK 脚本语言具有强大的文本处理功能，是一种通用的解决方案，可用于数据处理、文本分析、报告生成等各种任务。

AWK 基本用法
AWK 的基本用法是逐行处理输入文本，并根据用户定义的模式（pattern）和动作（action）来进行处理。其基本语法如下：

awk 'pattern { action }' filename
其中：

pattern 定义了匹配条件，如果当前行匹配该条件，则执行对应的 action。
action 是在匹配到指定 pattern 的行时执行的操作。
AWK 内置变量
AWK 提供了许多内置变量，用于访问当前输入行的各种属性。一些常用的内置变量包括：

NF：当前行的字段数量。
NR：当前行的行号。
$0：当前行的完整内容。
$1, $2, ...：当前行的第一个、第二个字段，以此类推。
AWK 示例
以下是一些常见的 AWK 示例：

打印文件的每一行：
bash

awk '{print}' filename
打印文件的第一个字段：
bash

awk '{print $1}' filename
打印文件的行号和内容：
bash

awk '{print NR, $0}' filename
计算文件的总行数：
bash

awk 'END {print NR}' filename
计算文件中数字的总和：
bash

awk '{sum += $1} END {print sum}' filename
根据条件过滤行：
bash

awk '$1 > 10 {print}' filename
AWK 高级用法
AWK 还支持一些高级特性，例如：

自定义函数：可以在 AWK 脚本中编写自定义函数，以便在处理过程中重复使用。
多文件处理：可以同时处理多个输入文件，并在不同文件之间共享状态。
字符串处理：AWK 提供了丰富的字符串处理函数，可用于拼接、分割、替换等操作。
总结
AWK 是一种灵活而强大的文本处理工具，适用于各种数据处理和文本分析任务。通过掌握 AWK 的基本语法和内置功能，可以高效地处理和分析文本数据，并实现各种自定义需求。

希望这份 AWK 命令的总结学习笔记能够帮助你更好地理解和应用 AWK 工具。





